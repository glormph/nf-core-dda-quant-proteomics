sudo: required
language: python
jdk: openjdk8
services: docker
python: '3.6'
cache: pip
matrix:
  fast_finish: true

before_install:
  # PRs to master are only ok if coming from dev branch
  - '[ $TRAVIS_PULL_REQUEST = "false" ] || [ $TRAVIS_BRANCH != "master" ] || ([ $TRAVIS_PULL_REQUEST_SLUG = $TRAVIS_REPO_SLUG ] && [ $TRAVIS_PULL_REQUEST_BRANCH = "dev" ])'
  # Pull the docker image first so the test doesn't wait for this
  - docker pull lehtiolab/ddamsproteomics:1.2
  # Fake the tag locally so that the pipeline runs properly
  # - docker tag glormph/lehtio-quant-proteomics:dev lehtiolab/ddamsproteomics:1.2

install:
  # Install Nextflow
  - mkdir /tmp/nextflow && cd /tmp/nextflow
  - wget -qO- get.nextflow.io | bash
  - sudo ln -s /tmp/nextflow/nextflow /usr/local/bin/nextflow
  # Install nf-core/tools
  - pip install nf-core
  # Reset
  - mkdir ${TRAVIS_BUILD_DIR}/tests && cd ${TRAVIS_BUILD_DIR}/tests

env:
  - NXF_VER='19.04.1' # Specify a minimum NF version that should be tested and work
  - NXF_VER='' # Plus: get the latest NF version and check that it works

script:
  # Lint the pipeline code TODO disabled since it hiccups on not being nf-core
  # Pend it until we get to be nf-core
  #- nf-core lint ${TRAVIS_BUILD_DIR}
  # Run the pipeline with the test profile
  - nextflow run ${TRAVIS_BUILD_DIR} -profile test,docker -resume
  - nextflow run ${TRAVIS_BUILD_DIR} -profile test_nofrac,docker -resume
